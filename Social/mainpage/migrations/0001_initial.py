# Generated by Django 3.0.2 on 2020-02-06 01:40

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('contents', models.CharField(max_length=225)),
                ('created_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Friends',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('created_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'friends',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Likes',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('created_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'likes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('contents', models.TextField()),
                ('created_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'messages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MonthlyChart',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('created_dt', models.DateTimeField()),
                ('ranked_set', models.CharField(blank=True, max_length=225, null=True)),
            ],
            options={
                'db_table': 'monthly_chart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('contents', models.CharField(max_length=225)),
                ('url', models.CharField(max_length=225)),
                ('flag', models.IntegerField()),
                ('created_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'notifications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('contents', models.CharField(max_length=500)),
                ('created_dt', models.DateTimeField()),
                ('tags', models.CharField(blank=True, max_length=255, null=True)),
                ('comments_count', models.IntegerField(blank=True, null=True)),
                ('likes_count', models.IntegerField(blank=True, null=True)),
                ('updated_dt', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'posts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rooms',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('last_message', models.TextField()),
                ('created_dt', models.DateTimeField()),
                ('updated_dt', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rooms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackGenres',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'track_genres',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tracks',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=45)),
                ('track_source', models.CharField(max_length=80)),
                ('image', models.CharField(blank=True, max_length=225, null=True)),
                ('flag', models.IntegerField(blank=True, null=True)),
                ('users_idx', models.CharField(max_length=255)),
                ('created_dt', models.DateTimeField()),
                ('played_count', models.IntegerField(blank=True, null=True)),
                ('moods', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'tracks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackTypes',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'track_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.CharField(max_length=45, unique=True)),
                ('pw', models.CharField(max_length=80)),
                ('nickname', models.CharField(blank=True, max_length=45, null=True)),
                ('email', models.CharField(max_length=45)),
                ('profile', models.CharField(blank=True, max_length=500, null=True)),
                ('salt', models.CharField(max_length=64)),
                ('follower_count', models.IntegerField(blank=True, null=True)),
                ('following_count', models.IntegerField(blank=True, null=True)),
                ('tracks_count', models.IntegerField(blank=True, null=True)),
                ('grade', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_dt', models.DateTimeField()),
                ('access_dt', models.DateTimeField(blank=True, null=True)),
                ('updated_dt', models.DateTimeField(blank=True, null=True)),
                ('refresh_token', models.CharField(blank=True, max_length=225, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsersHasTracks',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('created_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'users_has_tracks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WeeklyChart',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('created_dt', models.DateTimeField()),
                ('ranked_set', models.CharField(blank=True, max_length=225, null=True)),
            ],
            options={
                'db_table': 'weekly_chart',
                'managed': False,
            },
        ),
    ]
